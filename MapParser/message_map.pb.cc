// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_map.proto

#include "message_map.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DoubleValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace protobuf_message_5fmap_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Message_MapAttribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Message_MapPos;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Message_MapProperty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Message_MapRSSIPos;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Message_PatrolRouteStation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Message_Device;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Message_LaserDevice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Message_MapHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Message_MapLine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Message_PatrolRoute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Message_AdvancedLine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Message_AdvancedPoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Message_AdvancedArea;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_5fmap_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Message_AdvancedCurve;
}  // namespace protobuf_message_5fmap_2eproto
namespace rbk {
namespace protocol {
class Message_MapPropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_MapProperty>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  bool bool_value_;
  ::google::protobuf::int32 int32_value_;
  ::google::protobuf::uint32 uint32_value_;
  ::google::protobuf::int64 int64_value_;
  ::google::protobuf::uint64 uint64_value_;
  float float_value_;
  double double_value_;
  ::google::protobuf::internal::ArenaStringPtr bytes_value_;
} _Message_MapProperty_default_instance_;
class Message_MapPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_MapPos>
      _instance;
} _Message_MapPos_default_instance_;
class Message_MapRSSIPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_MapRSSIPos>
      _instance;
} _Message_MapRSSIPos_default_instance_;
class Message_MapLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_MapLine>
      _instance;
} _Message_MapLine_default_instance_;
class Message_MapHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_MapHeader>
      _instance;
} _Message_MapHeader_default_instance_;
class Message_MapAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_MapAttribute>
      _instance;
} _Message_MapAttribute_default_instance_;
class Message_AdvancedPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_AdvancedPoint>
      _instance;
} _Message_AdvancedPoint_default_instance_;
class Message_AdvancedLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_AdvancedLine>
      _instance;
} _Message_AdvancedLine_default_instance_;
class Message_AdvancedCurveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_AdvancedCurve>
      _instance;
} _Message_AdvancedCurve_default_instance_;
class Message_AdvancedAreaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_AdvancedArea>
      _instance;
} _Message_AdvancedArea_default_instance_;
class Message_VirtualLineListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_VirtualLineList>
      _instance;
} _Message_VirtualLineList_default_instance_;
class Message_LaserDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_LaserDevice>
      _instance;
} _Message_LaserDevice_default_instance_;
class Message_DeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_Device>
      _instance;
} _Message_Device_default_instance_;
class Message_PatrolRouteStationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_PatrolRouteStation>
      _instance;
} _Message_PatrolRouteStation_default_instance_;
class Message_PatrolRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_PatrolRoute>
      _instance;
} _Message_PatrolRoute_default_instance_;
class Message_MapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message_Map>
      _instance;
} _Message_Map_default_instance_;
}  // namespace protocol
}  // namespace rbk
namespace protobuf_message_5fmap_2eproto {
static void InitDefaultsMessage_MapProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_MapProperty_default_instance_;
    new (ptr) ::rbk::protocol::Message_MapProperty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_MapProperty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Message_MapProperty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessage_MapProperty}, {}};

static void InitDefaultsMessage_MapPos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_MapPos_default_instance_;
    new (ptr) ::rbk::protocol::Message_MapPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_MapPos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Message_MapPos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessage_MapPos}, {}};

static void InitDefaultsMessage_MapRSSIPos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_MapRSSIPos_default_instance_;
    new (ptr) ::rbk::protocol::Message_MapRSSIPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_MapRSSIPos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Message_MapRSSIPos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessage_MapRSSIPos}, {}};

static void InitDefaultsMessage_MapLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_MapLine_default_instance_;
    new (ptr) ::rbk::protocol::Message_MapLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_MapLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Message_MapLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessage_MapLine}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base,}};

static void InitDefaultsMessage_MapHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_MapHeader_default_instance_;
    new (ptr) ::rbk::protocol::Message_MapHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_MapHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Message_MapHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessage_MapHeader}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base,}};

static void InitDefaultsMessage_MapAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_MapAttribute_default_instance_;
    new (ptr) ::rbk::protocol::Message_MapAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_MapAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Message_MapAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessage_MapAttribute}, {}};

static void InitDefaultsMessage_AdvancedPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_AdvancedPoint_default_instance_;
    new (ptr) ::rbk::protocol::Message_AdvancedPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_AdvancedPoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Message_AdvancedPoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMessage_AdvancedPoint}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapProperty.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapAttribute.base,}};

static void InitDefaultsMessage_AdvancedLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_AdvancedLine_default_instance_;
    new (ptr) ::rbk::protocol::Message_AdvancedLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_AdvancedLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Message_AdvancedLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMessage_AdvancedLine}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapLine.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapProperty.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapAttribute.base,}};

static void InitDefaultsMessage_AdvancedCurve() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_AdvancedCurve_default_instance_;
    new (ptr) ::rbk::protocol::Message_AdvancedCurve();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_AdvancedCurve::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Message_AdvancedCurve =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsMessage_AdvancedCurve}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedPoint.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapProperty.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_Device.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapAttribute.base,}};

static void InitDefaultsMessage_AdvancedArea() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_AdvancedArea_default_instance_;
    new (ptr) ::rbk::protocol::Message_AdvancedArea();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_AdvancedArea::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Message_AdvancedArea =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsMessage_AdvancedArea}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapProperty.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_Device.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapAttribute.base,}};

static void InitDefaultsMessage_VirtualLineList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_VirtualLineList_default_instance_;
    new (ptr) ::rbk::protocol::Message_VirtualLineList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_VirtualLineList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Message_VirtualLineList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessage_VirtualLineList}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapLine.base,}};

static void InitDefaultsMessage_LaserDevice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_LaserDevice_default_instance_;
    new (ptr) ::rbk::protocol::Message_LaserDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_LaserDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Message_LaserDevice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessage_LaserDevice}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base,}};

static void InitDefaultsMessage_Device() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_Device_default_instance_;
    new (ptr) ::rbk::protocol::Message_Device();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_Device::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Message_Device =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessage_Device}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_LaserDevice.base,}};

static void InitDefaultsMessage_PatrolRouteStation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_PatrolRouteStation_default_instance_;
    new (ptr) ::rbk::protocol::Message_PatrolRouteStation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_PatrolRouteStation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Message_PatrolRouteStation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessage_PatrolRouteStation}, {}};

static void InitDefaultsMessage_PatrolRoute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_PatrolRoute_default_instance_;
    new (ptr) ::rbk::protocol::Message_PatrolRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_PatrolRoute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Message_PatrolRoute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMessage_PatrolRoute}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_PatrolRouteStation.base,
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_DoubleValue.base,}};

static void InitDefaultsMessage_Map() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rbk::protocol::_Message_Map_default_instance_;
    new (ptr) ::rbk::protocol::Message_Map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rbk::protocol::Message_Map::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Message_Map =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsMessage_Map}, {
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapHeader.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapLine.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedPoint.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedLine.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedCurve.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedArea.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_PatrolRoute.base,
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapRSSIPos.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Message_MapProperty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_MapPos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_MapRSSIPos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_MapLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_MapHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_MapAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_AdvancedPoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_AdvancedLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_AdvancedCurve.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_AdvancedArea.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_VirtualLineList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_LaserDevice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_Device.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_PatrolRouteStation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_PatrolRoute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_Map.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapProperty, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapProperty, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapProperty, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapProperty, value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, string_value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, bool_value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, int32_value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, uint32_value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, int64_value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, uint64_value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, float_value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, double_value_),
  offsetof(::rbk::protocol::Message_MapPropertyDefaultTypeInternal, bytes_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapProperty, oneof_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapPos, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapPos, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapRSSIPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapRSSIPos, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapRSSIPos, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapLine, start_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapLine, end_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapHeader, map_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapHeader, map_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapHeader, min_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapHeader, max_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapHeader, resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapHeader, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapAttribute, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapAttribute, color_pen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapAttribute, color_brush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_MapAttribute, color_font_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, instance_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, ignore_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedPoint, attribute_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedLine, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedLine, instance_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedLine, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedLine, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedLine, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedLine, attribute_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, instance_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, start_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, end_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, control_pos1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, control_pos2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, control_pos3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedCurve, attribute_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, instance_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, pos_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, property_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_AdvancedArea, attribute_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_VirtualLineList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_VirtualLineList, virtual_map_line_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_LaserDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_LaserDevice, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_LaserDevice, laser_margin_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Device, model_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Device, laser_devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Device, ultrasonic_dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Device, fallingdown_dist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRouteStation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRouteStation, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, station_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, max_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, max_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, max_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, max_rot_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, max_dec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_PatrolRoute, max_rot_dec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, map_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, normal_pos_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, normal_line_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, advanced_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, advanced_line_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, advanced_curve_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, advanced_area_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, patrol_route_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rbk::protocol::Message_Map, rssi_pos_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rbk::protocol::Message_MapProperty)},
  { 18, -1, sizeof(::rbk::protocol::Message_MapPos)},
  { 25, -1, sizeof(::rbk::protocol::Message_MapRSSIPos)},
  { 32, -1, sizeof(::rbk::protocol::Message_MapLine)},
  { 39, -1, sizeof(::rbk::protocol::Message_MapHeader)},
  { 50, -1, sizeof(::rbk::protocol::Message_MapAttribute)},
  { 59, -1, sizeof(::rbk::protocol::Message_AdvancedPoint)},
  { 72, -1, sizeof(::rbk::protocol::Message_AdvancedLine)},
  { 83, -1, sizeof(::rbk::protocol::Message_AdvancedCurve)},
  { 99, -1, sizeof(::rbk::protocol::Message_AdvancedArea)},
  { 112, -1, sizeof(::rbk::protocol::Message_VirtualLineList)},
  { 118, -1, sizeof(::rbk::protocol::Message_LaserDevice)},
  { 125, -1, sizeof(::rbk::protocol::Message_Device)},
  { 134, -1, sizeof(::rbk::protocol::Message_PatrolRouteStation)},
  { 140, -1, sizeof(::rbk::protocol::Message_PatrolRoute)},
  { 154, -1, sizeof(::rbk::protocol::Message_Map)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_MapProperty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_MapPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_MapRSSIPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_MapLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_MapHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_MapAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_AdvancedPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_AdvancedLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_AdvancedCurve_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_AdvancedArea_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_VirtualLineList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_LaserDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_Device_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_PatrolRouteStation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_PatrolRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rbk::protocol::_Message_Map_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "message_map.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021message_map.proto\022\014rbk.protocol\032\036googl"
      "e/protobuf/wrappers.proto\"\240\002\n\023Message_Ma"
      "pProperty\022\013\n\003key\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\r\n\005"
      "value\030\003 \001(\014\022\026\n\014string_value\030\004 \001(\tH\000\022\024\n\nb"
      "ool_value\030\005 \001(\010H\000\022\025\n\013int32_value\030\006 \001(\005H\000"
      "\022\026\n\014uint32_value\030\007 \001(\rH\000\022\025\n\013int64_value\030"
      "\010 \001(\003H\000\022\026\n\014uint64_value\030\t \001(\004H\000\022\025\n\013float"
      "_value\030\n \001(\002H\000\022\026\n\014double_value\030\013 \001(\001H\000\022\025"
      "\n\013bytes_value\030\014 \001(\014H\000B\r\n\013oneof_value\"&\n\016"
      "Message_MapPos\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\"*\n\022"
      "Message_MapRSSIPos\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001"
      "\"q\n\017Message_MapLine\022/\n\tstart_pos\030\001 \001(\0132\034"
      ".rbk.protocol.Message_MapPos\022-\n\007end_pos\030"
      "\002 \001(\0132\034.rbk.protocol.Message_MapPos\"\272\001\n\021"
      "Message_MapHeader\022\020\n\010map_type\030\001 \001(\t\022\020\n\010m"
      "ap_name\030\002 \001(\t\022-\n\007min_pos\030\003 \001(\0132\034.rbk.pro"
      "tocol.Message_MapPos\022-\n\007max_pos\030\004 \001(\0132\034."
      "rbk.protocol.Message_MapPos\022\022\n\nresolutio"
      "n\030\005 \001(\001\022\017\n\007version\030\010 \001(\t\"g\n\024Message_MapA"
      "ttribute\022\023\n\013description\030\001 \001(\t\022\021\n\tcolor_p"
      "en\030\002 \001(\r\022\023\n\013color_brush\030\003 \001(\r\022\022\n\ncolor_f"
      "ont\030\004 \001(\r\"\210\002\n\025Message_AdvancedPoint\022\022\n\nc"
      "lass_name\030\001 \001(\t\022\025\n\rinstance_name\030\002 \001(\t\022)"
      "\n\003pos\030\003 \001(\0132\034.rbk.protocol.Message_MapPo"
      "s\022\013\n\003dir\030\004 \001(\001\0223\n\010property\030\005 \003(\0132!.rbk.p"
      "rotocol.Message_MapProperty\022\022\n\nignore_di"
      "r\030\006 \001(\010\022\014\n\004desc\030\010 \001(\014\0225\n\tattribute\030\n \001(\013"
      "2\".rbk.protocol.Message_MapAttribute\"\350\001\n"
      "\024Message_AdvancedLine\022\022\n\nclass_name\030\001 \001("
      "\t\022\025\n\rinstance_name\030\002 \001(\t\022+\n\004line\030\003 \001(\0132\035"
      ".rbk.protocol.Message_MapLine\0223\n\010propert"
      "y\030\004 \003(\0132!.rbk.protocol.Message_MapProper"
      "ty\022\014\n\004desc\030\010 \001(\014\0225\n\tattribute\030\n \001(\0132\".rb"
      "k.protocol.Message_MapAttribute\"\365\003\n\025Mess"
      "age_AdvancedCurve\022\022\n\nclass_name\030\001 \001(\t\022\025\n"
      "\rinstance_name\030\002 \001(\t\0226\n\tstart_pos\030\003 \001(\0132"
      "#.rbk.protocol.Message_AdvancedPoint\0224\n\007"
      "end_pos\030\004 \001(\0132#.rbk.protocol.Message_Adv"
      "ancedPoint\0222\n\014control_pos1\030\005 \001(\0132\034.rbk.p"
      "rotocol.Message_MapPos\0222\n\014control_pos2\030\006"
      " \001(\0132\034.rbk.protocol.Message_MapPos\0223\n\010pr"
      "operty\030\007 \003(\0132!.rbk.protocol.Message_MapP"
      "roperty\022\014\n\004desc\030\010 \001(\014\0222\n\014control_pos3\030\t "
      "\001(\0132\034.rbk.protocol.Message_MapPos\022-\n\007dev"
      "ices\030\014 \003(\0132\034.rbk.protocol.Message_Device"
      "\0225\n\tattribute\030\017 \001(\0132\".rbk.protocol.Messa"
      "ge_MapAttribute\"\250\002\n\024Message_AdvancedArea"
      "\022\022\n\nclass_name\030\001 \001(\t\022\025\n\rinstance_name\030\002 "
      "\001(\t\022/\n\tpos_group\030\003 \003(\0132\034.rbk.protocol.Me"
      "ssage_MapPos\022\013\n\003dir\030\004 \001(\001\0223\n\010property\030\005 "
      "\003(\0132!.rbk.protocol.Message_MapProperty\022\014"
      "\n\004desc\030\010 \001(\014\022-\n\007devices\030\n \003(\0132\034.rbk.prot"
      "ocol.Message_Device\0225\n\tattribute\030\017 \001(\0132\""
      ".rbk.protocol.Message_MapAttribute\"R\n\027Me"
      "ssage_VirtualLineList\0227\n\020virtual_map_lin"
      "e\030\001 \003(\0132\035.rbk.protocol.Message_MapLine\"Y"
      "\n\023Message_LaserDevice\022\n\n\002id\030\001 \001(\r\0226\n\020las"
      "er_margin_pos\030\002 \003(\0132\034.rbk.protocol.Messa"
      "ge_MapPos\"\221\001\n\016Message_Device\022\022\n\nmodel_na"
      "me\030\001 \001(\t\0228\n\rlaser_devices\030\005 \003(\0132!.rbk.pr"
      "otocol.Message_LaserDevice\022\027\n\017ultrasonic"
      "_dist\030\006 \003(\001\022\030\n\020fallingdown_dist\030\007 \003(\001\"(\n"
      "\032Message_PatrolRouteStation\022\n\n\002id\030\001 \001(\t\""
      "\225\003\n\023Message_PatrolRoute\022\014\n\004name\030\001 \001(\t\022>\n"
      "\014station_list\030\002 \003(\0132(.rbk.protocol.Messa"
      "ge_PatrolRouteStation\022/\n\tmax_speed\030\004 \001(\013"
      "2\034.google.protobuf.DoubleValue\022-\n\007max_ac"
      "c\030\005 \001(\0132\034.google.protobuf.DoubleValue\022-\n"
      "\007max_rot\030\006 \001(\0132\034.google.protobuf.DoubleV"
      "alue\0221\n\013max_rot_acc\030\007 \001(\0132\034.google.proto"
      "buf.DoubleValue\022\014\n\004desc\030\010 \001(\014\022-\n\007max_dec"
      "\030\t \001(\0132\034.google.protobuf.DoubleValue\0221\n\013"
      "max_rot_dec\030\n \001(\0132\034.google.protobuf.Doub"
      "leValue\"\300\004\n\013Message_Map\022\025\n\rmap_directory"
      "\030\001 \001(\t\022/\n\006header\030\002 \001(\0132\037.rbk.protocol.Me"
      "ssage_MapHeader\0225\n\017normal_pos_list\030\003 \003(\013"
      "2\034.rbk.protocol.Message_MapPos\0227\n\020normal"
      "_line_list\030\004 \003(\0132\035.rbk.protocol.Message_"
      "MapLine\022@\n\023advanced_point_list\030\006 \003(\0132#.r"
      "bk.protocol.Message_AdvancedPoint\022>\n\022adv"
      "anced_line_list\030\007 \003(\0132\".rbk.protocol.Mes"
      "sage_AdvancedLine\022@\n\023advanced_curve_list"
      "\030\010 \003(\0132#.rbk.protocol.Message_AdvancedCu"
      "rve\022>\n\022advanced_area_list\030\t \003(\0132\".rbk.pr"
      "otocol.Message_AdvancedArea\022<\n\021patrol_ro"
      "ute_list\030\n \003(\0132!.rbk.protocol.Message_Pa"
      "trolRoute\0227\n\rrssi_pos_list\030\013 \003(\0132 .rbk.p"
      "rotocol.Message_MapRSSIPosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3514);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_map.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_5fmap_2eproto
namespace rbk {
namespace protocol {

// ===================================================================

void Message_MapProperty::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_MapProperty_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::rbk::protocol::_Message_MapProperty_default_instance_.bool_value_ = false;
  ::rbk::protocol::_Message_MapProperty_default_instance_.int32_value_ = 0;
  ::rbk::protocol::_Message_MapProperty_default_instance_.uint32_value_ = 0u;
  ::rbk::protocol::_Message_MapProperty_default_instance_.int64_value_ = GOOGLE_LONGLONG(0);
  ::rbk::protocol::_Message_MapProperty_default_instance_.uint64_value_ = GOOGLE_ULONGLONG(0);
  ::rbk::protocol::_Message_MapProperty_default_instance_.float_value_ = 0;
  ::rbk::protocol::_Message_MapProperty_default_instance_.double_value_ = 0;
  ::rbk::protocol::_Message_MapProperty_default_instance_.bytes_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_MapProperty::kKeyFieldNumber;
const int Message_MapProperty::kTypeFieldNumber;
const int Message_MapProperty::kValueFieldNumber;
const int Message_MapProperty::kStringValueFieldNumber;
const int Message_MapProperty::kBoolValueFieldNumber;
const int Message_MapProperty::kInt32ValueFieldNumber;
const int Message_MapProperty::kUint32ValueFieldNumber;
const int Message_MapProperty::kInt64ValueFieldNumber;
const int Message_MapProperty::kUint64ValueFieldNumber;
const int Message_MapProperty::kFloatValueFieldNumber;
const int Message_MapProperty::kDoubleValueFieldNumber;
const int Message_MapProperty::kBytesValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_MapProperty::Message_MapProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapProperty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_MapProperty)
}
Message_MapProperty::Message_MapProperty(const Message_MapProperty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  clear_has_oneof_value();
  switch (from.oneof_value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kInt32Value: {
      set_int32_value(from.int32_value());
      break;
    }
    case kUint32Value: {
      set_uint32_value(from.uint32_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kUint64Value: {
      set_uint64_value(from.uint64_value());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_MapProperty)
}

void Message_MapProperty::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_oneof_value();
}

Message_MapProperty::~Message_MapProperty() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_MapProperty)
  SharedDtor();
}

void Message_MapProperty::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_oneof_value()) {
    clear_oneof_value();
  }
}

void Message_MapProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_MapProperty::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_MapProperty& Message_MapProperty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_MapProperty.base);
  return *internal_default_instance();
}


void Message_MapProperty::clear_oneof_value() {
// @@protoc_insertion_point(one_of_clear_start:rbk.protocol.Message_MapProperty)
  switch (oneof_value_case()) {
    case kStringValue: {
      oneof_value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt32Value: {
      // No need to clear
      break;
    }
    case kUint32Value: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kBytesValue: {
      oneof_value_.bytes_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_VALUE_NOT_SET;
}


void Message_MapProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_MapProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_oneof_value();
  _internal_metadata_.Clear();
}

bool Message_MapProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_MapProperty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_MapProperty.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_MapProperty.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_MapProperty.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_oneof_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &oneof_value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int32_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_oneof_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oneof_value_.int32_value_)));
          set_has_int32_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uint32_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_oneof_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oneof_value_.uint32_value_)));
          set_has_uint32_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int64_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_oneof_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &oneof_value_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uint64_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          clear_oneof_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &oneof_value_.uint64_value_)));
          set_has_uint64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          clear_oneof_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &oneof_value_.float_value_)));
          set_has_float_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          clear_oneof_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &oneof_value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytes_value = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_MapProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_MapProperty)
  return false;
#undef DO_
}

void Message_MapProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_MapProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapProperty.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapProperty.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapProperty.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->string_value(), output);
  }

  // bool bool_value = 5;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bool_value(), output);
  }

  // int32 int32_value = 6;
  if (has_int32_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->int32_value(), output);
  }

  // uint32 uint32_value = 7;
  if (has_uint32_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uint32_value(), output);
  }

  // int64 int64_value = 8;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->int64_value(), output);
  }

  // uint64 uint64_value = 9;
  if (has_uint64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->uint64_value(), output);
  }

  // float float_value = 10;
  if (has_float_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->float_value(), output);
  }

  // double double_value = 11;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->double_value(), output);
  }

  // bytes bytes_value = 12;
  if (has_bytes_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->bytes_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_MapProperty)
}

::google::protobuf::uint8* Message_MapProperty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_MapProperty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapProperty.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapProperty.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapProperty.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->string_value(), target);
  }

  // bool bool_value = 5;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bool_value(), target);
  }

  // int32 int32_value = 6;
  if (has_int32_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->int32_value(), target);
  }

  // uint32 uint32_value = 7;
  if (has_uint32_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uint32_value(), target);
  }

  // int64 int64_value = 8;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->int64_value(), target);
  }

  // uint64 uint64_value = 9;
  if (has_uint64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->uint64_value(), target);
  }

  // float float_value = 10;
  if (has_float_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->float_value(), target);
  }

  // double double_value = 11;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->double_value(), target);
  }

  // bytes bytes_value = 12;
  if (has_bytes_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->bytes_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_MapProperty)
  return target;
}

size_t Message_MapProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_MapProperty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  switch (oneof_value_case()) {
    // string string_value = 4;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // bool bool_value = 5;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // int32 int32_value = 6;
    case kInt32Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32_value());
      break;
    }
    // uint32 uint32_value = 7;
    case kUint32Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint32_value());
      break;
    }
    // int64 int64_value = 8;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // uint64 uint64_value = 9;
    case kUint64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64_value());
      break;
    }
    // float float_value = 10;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // double double_value = 11;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // bytes bytes_value = 12;
    case kBytesValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_value());
      break;
    }
    case ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MapProperty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_MapProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MapProperty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_MapProperty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_MapProperty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_MapProperty)
    MergeFrom(*source);
  }
}

void Message_MapProperty::MergeFrom(const Message_MapProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_MapProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  switch (from.oneof_value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kInt32Value: {
      set_int32_value(from.int32_value());
      break;
    }
    case kUint32Value: {
      set_uint32_value(from.uint32_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kUint64Value: {
      set_uint64_value(from.uint64_value());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case ONEOF_VALUE_NOT_SET: {
      break;
    }
  }
}

void Message_MapProperty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_MapProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MapProperty::CopyFrom(const Message_MapProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_MapProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MapProperty::IsInitialized() const {
  return true;
}

void Message_MapProperty::Swap(Message_MapProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_MapProperty::InternalSwap(Message_MapProperty* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(oneof_value_, other->oneof_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_MapProperty::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_MapPos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_MapPos::kXFieldNumber;
const int Message_MapPos::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_MapPos::Message_MapPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_MapPos)
}
Message_MapPos::Message_MapPos(const Message_MapPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_MapPos)
}

void Message_MapPos::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Message_MapPos::~Message_MapPos() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_MapPos)
  SharedDtor();
}

void Message_MapPos::SharedDtor() {
}

void Message_MapPos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_MapPos::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_MapPos& Message_MapPos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_MapPos.base);
  return *internal_default_instance();
}


void Message_MapPos::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_MapPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Message_MapPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_MapPos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_MapPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_MapPos)
  return false;
#undef DO_
}

void Message_MapPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_MapPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_MapPos)
}

::google::protobuf::uint8* Message_MapPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_MapPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_MapPos)
  return target;
}

size_t Message_MapPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_MapPos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MapPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_MapPos)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MapPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_MapPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_MapPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_MapPos)
    MergeFrom(*source);
  }
}

void Message_MapPos::MergeFrom(const Message_MapPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_MapPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Message_MapPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_MapPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MapPos::CopyFrom(const Message_MapPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_MapPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MapPos::IsInitialized() const {
  return true;
}

void Message_MapPos::Swap(Message_MapPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_MapPos::InternalSwap(Message_MapPos* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_MapPos::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_MapRSSIPos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_MapRSSIPos::kXFieldNumber;
const int Message_MapRSSIPos::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_MapRSSIPos::Message_MapRSSIPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapRSSIPos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_MapRSSIPos)
}
Message_MapRSSIPos::Message_MapRSSIPos(const Message_MapRSSIPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_MapRSSIPos)
}

void Message_MapRSSIPos::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Message_MapRSSIPos::~Message_MapRSSIPos() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_MapRSSIPos)
  SharedDtor();
}

void Message_MapRSSIPos::SharedDtor() {
}

void Message_MapRSSIPos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_MapRSSIPos::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_MapRSSIPos& Message_MapRSSIPos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_MapRSSIPos.base);
  return *internal_default_instance();
}


void Message_MapRSSIPos::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_MapRSSIPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Message_MapRSSIPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_MapRSSIPos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_MapRSSIPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_MapRSSIPos)
  return false;
#undef DO_
}

void Message_MapRSSIPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_MapRSSIPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_MapRSSIPos)
}

::google::protobuf::uint8* Message_MapRSSIPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_MapRSSIPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_MapRSSIPos)
  return target;
}

size_t Message_MapRSSIPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_MapRSSIPos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MapRSSIPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_MapRSSIPos)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MapRSSIPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_MapRSSIPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_MapRSSIPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_MapRSSIPos)
    MergeFrom(*source);
  }
}

void Message_MapRSSIPos::MergeFrom(const Message_MapRSSIPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_MapRSSIPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Message_MapRSSIPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_MapRSSIPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MapRSSIPos::CopyFrom(const Message_MapRSSIPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_MapRSSIPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MapRSSIPos::IsInitialized() const {
  return true;
}

void Message_MapRSSIPos::Swap(Message_MapRSSIPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_MapRSSIPos::InternalSwap(Message_MapRSSIPos* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_MapRSSIPos::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_MapLine::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_MapLine_default_instance_._instance.get_mutable()->start_pos_ = const_cast< ::rbk::protocol::Message_MapPos*>(
      ::rbk::protocol::Message_MapPos::internal_default_instance());
  ::rbk::protocol::_Message_MapLine_default_instance_._instance.get_mutable()->end_pos_ = const_cast< ::rbk::protocol::Message_MapPos*>(
      ::rbk::protocol::Message_MapPos::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_MapLine::kStartPosFieldNumber;
const int Message_MapLine::kEndPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_MapLine::Message_MapLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_MapLine)
}
Message_MapLine::Message_MapLine(const Message_MapLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_pos()) {
    start_pos_ = new ::rbk::protocol::Message_MapPos(*from.start_pos_);
  } else {
    start_pos_ = NULL;
  }
  if (from.has_end_pos()) {
    end_pos_ = new ::rbk::protocol::Message_MapPos(*from.end_pos_);
  } else {
    end_pos_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_MapLine)
}

void Message_MapLine::SharedCtor() {
  ::memset(&start_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_pos_) -
      reinterpret_cast<char*>(&start_pos_)) + sizeof(end_pos_));
}

Message_MapLine::~Message_MapLine() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_MapLine)
  SharedDtor();
}

void Message_MapLine::SharedDtor() {
  if (this != internal_default_instance()) delete start_pos_;
  if (this != internal_default_instance()) delete end_pos_;
}

void Message_MapLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_MapLine::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_MapLine& Message_MapLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_MapLine.base);
  return *internal_default_instance();
}


void Message_MapLine::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) {
    delete start_pos_;
  }
  start_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_pos_ != NULL) {
    delete end_pos_;
  }
  end_pos_ = NULL;
  _internal_metadata_.Clear();
}

bool Message_MapLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_MapLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rbk.protocol.Message_MapPos start_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapPos end_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_MapLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_MapLine)
  return false;
#undef DO_
}

void Message_MapLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbk.protocol.Message_MapPos start_pos = 1;
  if (this->has_start_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start_pos(), output);
  }

  // .rbk.protocol.Message_MapPos end_pos = 2;
  if (this->has_end_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end_pos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_MapLine)
}

::google::protobuf::uint8* Message_MapLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_MapLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rbk.protocol.Message_MapPos start_pos = 1;
  if (this->has_start_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start_pos(), deterministic, target);
  }

  // .rbk.protocol.Message_MapPos end_pos = 2;
  if (this->has_end_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end_pos(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_MapLine)
  return target;
}

size_t Message_MapLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_MapLine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rbk.protocol.Message_MapPos start_pos = 1;
  if (this->has_start_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_pos_);
  }

  // .rbk.protocol.Message_MapPos end_pos = 2;
  if (this->has_end_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_pos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MapLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_MapLine)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MapLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_MapLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_MapLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_MapLine)
    MergeFrom(*source);
  }
}

void Message_MapLine::MergeFrom(const Message_MapLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_MapLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_pos()) {
    mutable_start_pos()->::rbk::protocol::Message_MapPos::MergeFrom(from.start_pos());
  }
  if (from.has_end_pos()) {
    mutable_end_pos()->::rbk::protocol::Message_MapPos::MergeFrom(from.end_pos());
  }
}

void Message_MapLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_MapLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MapLine::CopyFrom(const Message_MapLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_MapLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MapLine::IsInitialized() const {
  return true;
}

void Message_MapLine::Swap(Message_MapLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_MapLine::InternalSwap(Message_MapLine* other) {
  using std::swap;
  swap(start_pos_, other->start_pos_);
  swap(end_pos_, other->end_pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_MapLine::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_MapHeader::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_MapHeader_default_instance_._instance.get_mutable()->min_pos_ = const_cast< ::rbk::protocol::Message_MapPos*>(
      ::rbk::protocol::Message_MapPos::internal_default_instance());
  ::rbk::protocol::_Message_MapHeader_default_instance_._instance.get_mutable()->max_pos_ = const_cast< ::rbk::protocol::Message_MapPos*>(
      ::rbk::protocol::Message_MapPos::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_MapHeader::kMapTypeFieldNumber;
const int Message_MapHeader::kMapNameFieldNumber;
const int Message_MapHeader::kMinPosFieldNumber;
const int Message_MapHeader::kMaxPosFieldNumber;
const int Message_MapHeader::kResolutionFieldNumber;
const int Message_MapHeader::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_MapHeader::Message_MapHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_MapHeader)
}
Message_MapHeader::Message_MapHeader(const Message_MapHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.map_type().size() > 0) {
    map_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_type_);
  }
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.map_name().size() > 0) {
    map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_min_pos()) {
    min_pos_ = new ::rbk::protocol::Message_MapPos(*from.min_pos_);
  } else {
    min_pos_ = NULL;
  }
  if (from.has_max_pos()) {
    max_pos_ = new ::rbk::protocol::Message_MapPos(*from.max_pos_);
  } else {
    max_pos_ = NULL;
  }
  resolution_ = from.resolution_;
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_MapHeader)
}

void Message_MapHeader::SharedCtor() {
  map_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&min_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resolution_) -
      reinterpret_cast<char*>(&min_pos_)) + sizeof(resolution_));
}

Message_MapHeader::~Message_MapHeader() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_MapHeader)
  SharedDtor();
}

void Message_MapHeader::SharedDtor() {
  map_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete min_pos_;
  if (this != internal_default_instance()) delete max_pos_;
}

void Message_MapHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_MapHeader::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_MapHeader& Message_MapHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_MapHeader.base);
  return *internal_default_instance();
}


void Message_MapHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_MapHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && min_pos_ != NULL) {
    delete min_pos_;
  }
  min_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_pos_ != NULL) {
    delete max_pos_;
  }
  max_pos_ = NULL;
  resolution_ = 0;
  _internal_metadata_.Clear();
}

bool Message_MapHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_MapHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string map_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->map_type().data(), static_cast<int>(this->map_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_MapHeader.map_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string map_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->map_name().data(), static_cast<int>(this->map_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_MapHeader.map_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapPos min_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapPos max_pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double resolution = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_MapHeader.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_MapHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_MapHeader)
  return false;
#undef DO_
}

void Message_MapHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_MapHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_type = 1;
  if (this->map_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_type().data(), static_cast<int>(this->map_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapHeader.map_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->map_type(), output);
  }

  // string map_name = 2;
  if (this->map_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_name().data(), static_cast<int>(this->map_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapHeader.map_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->map_name(), output);
  }

  // .rbk.protocol.Message_MapPos min_pos = 3;
  if (this->has_min_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_min_pos(), output);
  }

  // .rbk.protocol.Message_MapPos max_pos = 4;
  if (this->has_max_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_max_pos(), output);
  }

  // double resolution = 5;
  if (this->resolution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->resolution(), output);
  }

  // string version = 8;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapHeader.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_MapHeader)
}

::google::protobuf::uint8* Message_MapHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_MapHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_type = 1;
  if (this->map_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_type().data(), static_cast<int>(this->map_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapHeader.map_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->map_type(), target);
  }

  // string map_name = 2;
  if (this->map_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_name().data(), static_cast<int>(this->map_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapHeader.map_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->map_name(), target);
  }

  // .rbk.protocol.Message_MapPos min_pos = 3;
  if (this->has_min_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_min_pos(), deterministic, target);
  }

  // .rbk.protocol.Message_MapPos max_pos = 4;
  if (this->has_max_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_max_pos(), deterministic, target);
  }

  // double resolution = 5;
  if (this->resolution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->resolution(), target);
  }

  // string version = 8;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapHeader.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_MapHeader)
  return target;
}

size_t Message_MapHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_MapHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string map_type = 1;
  if (this->map_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_type());
  }

  // string map_name = 2;
  if (this->map_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_name());
  }

  // string version = 8;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // .rbk.protocol.Message_MapPos min_pos = 3;
  if (this->has_min_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *min_pos_);
  }

  // .rbk.protocol.Message_MapPos max_pos = 4;
  if (this->has_max_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_pos_);
  }

  // double resolution = 5;
  if (this->resolution() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MapHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_MapHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MapHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_MapHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_MapHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_MapHeader)
    MergeFrom(*source);
  }
}

void Message_MapHeader::MergeFrom(const Message_MapHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_MapHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map_type().size() > 0) {

    map_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_type_);
  }
  if (from.map_name().size() > 0) {

    map_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_min_pos()) {
    mutable_min_pos()->::rbk::protocol::Message_MapPos::MergeFrom(from.min_pos());
  }
  if (from.has_max_pos()) {
    mutable_max_pos()->::rbk::protocol::Message_MapPos::MergeFrom(from.max_pos());
  }
  if (from.resolution() != 0) {
    set_resolution(from.resolution());
  }
}

void Message_MapHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_MapHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MapHeader::CopyFrom(const Message_MapHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_MapHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MapHeader::IsInitialized() const {
  return true;
}

void Message_MapHeader::Swap(Message_MapHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_MapHeader::InternalSwap(Message_MapHeader* other) {
  using std::swap;
  map_type_.Swap(&other->map_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  map_name_.Swap(&other->map_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(min_pos_, other->min_pos_);
  swap(max_pos_, other->max_pos_);
  swap(resolution_, other->resolution_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_MapHeader::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_MapAttribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_MapAttribute::kDescriptionFieldNumber;
const int Message_MapAttribute::kColorPenFieldNumber;
const int Message_MapAttribute::kColorBrushFieldNumber;
const int Message_MapAttribute::kColorFontFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_MapAttribute::Message_MapAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_MapAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_MapAttribute)
}
Message_MapAttribute::Message_MapAttribute(const Message_MapAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&color_pen_, &from.color_pen_,
    static_cast<size_t>(reinterpret_cast<char*>(&color_font_) -
    reinterpret_cast<char*>(&color_pen_)) + sizeof(color_font_));
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_MapAttribute)
}

void Message_MapAttribute::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&color_pen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_font_) -
      reinterpret_cast<char*>(&color_pen_)) + sizeof(color_font_));
}

Message_MapAttribute::~Message_MapAttribute() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_MapAttribute)
  SharedDtor();
}

void Message_MapAttribute::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message_MapAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_MapAttribute::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_MapAttribute& Message_MapAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_MapAttribute.base);
  return *internal_default_instance();
}


void Message_MapAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_MapAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&color_pen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_font_) -
      reinterpret_cast<char*>(&color_pen_)) + sizeof(color_font_));
  _internal_metadata_.Clear();
}

bool Message_MapAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_MapAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_MapAttribute.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 color_pen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_pen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 color_brush = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_brush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 color_font = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_font_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_MapAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_MapAttribute)
  return false;
#undef DO_
}

void Message_MapAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_MapAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapAttribute.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // uint32 color_pen = 2;
  if (this->color_pen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->color_pen(), output);
  }

  // uint32 color_brush = 3;
  if (this->color_brush() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->color_brush(), output);
  }

  // uint32 color_font = 4;
  if (this->color_font() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->color_font(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_MapAttribute)
}

::google::protobuf::uint8* Message_MapAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_MapAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_MapAttribute.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // uint32 color_pen = 2;
  if (this->color_pen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->color_pen(), target);
  }

  // uint32 color_brush = 3;
  if (this->color_brush() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->color_brush(), target);
  }

  // uint32 color_font = 4;
  if (this->color_font() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->color_font(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_MapAttribute)
  return target;
}

size_t Message_MapAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_MapAttribute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // uint32 color_pen = 2;
  if (this->color_pen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->color_pen());
  }

  // uint32 color_brush = 3;
  if (this->color_brush() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->color_brush());
  }

  // uint32 color_font = 4;
  if (this->color_font() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->color_font());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MapAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_MapAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MapAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_MapAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_MapAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_MapAttribute)
    MergeFrom(*source);
  }
}

void Message_MapAttribute::MergeFrom(const Message_MapAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_MapAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.color_pen() != 0) {
    set_color_pen(from.color_pen());
  }
  if (from.color_brush() != 0) {
    set_color_brush(from.color_brush());
  }
  if (from.color_font() != 0) {
    set_color_font(from.color_font());
  }
}

void Message_MapAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_MapAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MapAttribute::CopyFrom(const Message_MapAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_MapAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MapAttribute::IsInitialized() const {
  return true;
}

void Message_MapAttribute::Swap(Message_MapAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_MapAttribute::InternalSwap(Message_MapAttribute* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(color_pen_, other->color_pen_);
  swap(color_brush_, other->color_brush_);
  swap(color_font_, other->color_font_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_MapAttribute::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_AdvancedPoint::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_AdvancedPoint_default_instance_._instance.get_mutable()->pos_ = const_cast< ::rbk::protocol::Message_MapPos*>(
      ::rbk::protocol::Message_MapPos::internal_default_instance());
  ::rbk::protocol::_Message_AdvancedPoint_default_instance_._instance.get_mutable()->attribute_ = const_cast< ::rbk::protocol::Message_MapAttribute*>(
      ::rbk::protocol::Message_MapAttribute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_AdvancedPoint::kClassNameFieldNumber;
const int Message_AdvancedPoint::kInstanceNameFieldNumber;
const int Message_AdvancedPoint::kPosFieldNumber;
const int Message_AdvancedPoint::kDirFieldNumber;
const int Message_AdvancedPoint::kPropertyFieldNumber;
const int Message_AdvancedPoint::kIgnoreDirFieldNumber;
const int Message_AdvancedPoint::kDescFieldNumber;
const int Message_AdvancedPoint::kAttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_AdvancedPoint::Message_AdvancedPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedPoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_AdvancedPoint)
}
Message_AdvancedPoint::Message_AdvancedPoint(const Message_AdvancedPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_(from.property_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_name().size() > 0) {
    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_pos()) {
    pos_ = new ::rbk::protocol::Message_MapPos(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_attribute()) {
    attribute_ = new ::rbk::protocol::Message_MapAttribute(*from.attribute_);
  } else {
    attribute_ = NULL;
  }
  ::memcpy(&dir_, &from.dir_,
    static_cast<size_t>(reinterpret_cast<char*>(&ignore_dir_) -
    reinterpret_cast<char*>(&dir_)) + sizeof(ignore_dir_));
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_AdvancedPoint)
}

void Message_AdvancedPoint::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ignore_dir_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(ignore_dir_));
}

Message_AdvancedPoint::~Message_AdvancedPoint() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_AdvancedPoint)
  SharedDtor();
}

void Message_AdvancedPoint::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete attribute_;
}

void Message_AdvancedPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_AdvancedPoint::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_AdvancedPoint& Message_AdvancedPoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedPoint.base);
  return *internal_default_instance();
}


void Message_AdvancedPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_AdvancedPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_.Clear();
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && attribute_ != NULL) {
    delete attribute_;
  }
  attribute_ = NULL;
  ::memset(&dir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ignore_dir_) -
      reinterpret_cast<char*>(&dir_)) + sizeof(ignore_dir_));
  _internal_metadata_.Clear();
}

bool Message_AdvancedPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_AdvancedPoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string class_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_AdvancedPoint.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_name().data(), static_cast<int>(this->instance_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_AdvancedPoint.instance_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapPos pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dir = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapProperty property = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ignore_dir = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes desc = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapAttribute attribute = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_AdvancedPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_AdvancedPoint)
  return false;
#undef DO_
}

void Message_AdvancedPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_AdvancedPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedPoint.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedPoint.instance_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_name(), output);
  }

  // .rbk.protocol.Message_MapPos pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pos(), output);
  }

  // double dir = 4;
  if (this->dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dir(), output);
  }

  // repeated .rbk.protocol.Message_MapProperty property = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->property(static_cast<int>(i)),
      output);
  }

  // bool ignore_dir = 6;
  if (this->ignore_dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->ignore_dir(), output);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->desc(), output);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 10;
  if (this->has_attribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_attribute(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_AdvancedPoint)
}

::google::protobuf::uint8* Message_AdvancedPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_AdvancedPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedPoint.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedPoint.instance_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_name(), target);
  }

  // .rbk.protocol.Message_MapPos pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pos(), deterministic, target);
  }

  // double dir = 4;
  if (this->dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dir(), target);
  }

  // repeated .rbk.protocol.Message_MapProperty property = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->property(static_cast<int>(i)), deterministic, target);
  }

  // bool ignore_dir = 6;
  if (this->ignore_dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->ignore_dir(), target);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->desc(), target);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 10;
  if (this->has_attribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_attribute(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_AdvancedPoint)
  return target;
}

size_t Message_AdvancedPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_AdvancedPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_MapProperty property = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property(static_cast<int>(i)));
    }
  }

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_name());
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  // .rbk.protocol.Message_MapPos pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 10;
  if (this->has_attribute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attribute_);
  }

  // double dir = 4;
  if (this->dir() != 0) {
    total_size += 1 + 8;
  }

  // bool ignore_dir = 6;
  if (this->ignore_dir() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_AdvancedPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_AdvancedPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_AdvancedPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_AdvancedPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_AdvancedPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_AdvancedPoint)
    MergeFrom(*source);
  }
}

void Message_AdvancedPoint::MergeFrom(const Message_AdvancedPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_AdvancedPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_.MergeFrom(from.property_);
  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.instance_name().size() > 0) {

    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_pos()) {
    mutable_pos()->::rbk::protocol::Message_MapPos::MergeFrom(from.pos());
  }
  if (from.has_attribute()) {
    mutable_attribute()->::rbk::protocol::Message_MapAttribute::MergeFrom(from.attribute());
  }
  if (from.dir() != 0) {
    set_dir(from.dir());
  }
  if (from.ignore_dir() != 0) {
    set_ignore_dir(from.ignore_dir());
  }
}

void Message_AdvancedPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_AdvancedPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_AdvancedPoint::CopyFrom(const Message_AdvancedPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_AdvancedPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_AdvancedPoint::IsInitialized() const {
  return true;
}

void Message_AdvancedPoint::Swap(Message_AdvancedPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_AdvancedPoint::InternalSwap(Message_AdvancedPoint* other) {
  using std::swap;
  CastToBase(&property_)->InternalSwap(CastToBase(&other->property_));
  class_name_.Swap(&other->class_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_name_.Swap(&other->instance_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pos_, other->pos_);
  swap(attribute_, other->attribute_);
  swap(dir_, other->dir_);
  swap(ignore_dir_, other->ignore_dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_AdvancedPoint::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_AdvancedLine::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_AdvancedLine_default_instance_._instance.get_mutable()->line_ = const_cast< ::rbk::protocol::Message_MapLine*>(
      ::rbk::protocol::Message_MapLine::internal_default_instance());
  ::rbk::protocol::_Message_AdvancedLine_default_instance_._instance.get_mutable()->attribute_ = const_cast< ::rbk::protocol::Message_MapAttribute*>(
      ::rbk::protocol::Message_MapAttribute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_AdvancedLine::kClassNameFieldNumber;
const int Message_AdvancedLine::kInstanceNameFieldNumber;
const int Message_AdvancedLine::kLineFieldNumber;
const int Message_AdvancedLine::kPropertyFieldNumber;
const int Message_AdvancedLine::kDescFieldNumber;
const int Message_AdvancedLine::kAttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_AdvancedLine::Message_AdvancedLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_AdvancedLine)
}
Message_AdvancedLine::Message_AdvancedLine(const Message_AdvancedLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_(from.property_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_name().size() > 0) {
    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_line()) {
    line_ = new ::rbk::protocol::Message_MapLine(*from.line_);
  } else {
    line_ = NULL;
  }
  if (from.has_attribute()) {
    attribute_ = new ::rbk::protocol::Message_MapAttribute(*from.attribute_);
  } else {
    attribute_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_AdvancedLine)
}

void Message_AdvancedLine::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attribute_) -
      reinterpret_cast<char*>(&line_)) + sizeof(attribute_));
}

Message_AdvancedLine::~Message_AdvancedLine() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_AdvancedLine)
  SharedDtor();
}

void Message_AdvancedLine::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete line_;
  if (this != internal_default_instance()) delete attribute_;
}

void Message_AdvancedLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_AdvancedLine::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_AdvancedLine& Message_AdvancedLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedLine.base);
  return *internal_default_instance();
}


void Message_AdvancedLine::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_AdvancedLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_.Clear();
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && line_ != NULL) {
    delete line_;
  }
  line_ = NULL;
  if (GetArenaNoVirtual() == NULL && attribute_ != NULL) {
    delete attribute_;
  }
  attribute_ = NULL;
  _internal_metadata_.Clear();
}

bool Message_AdvancedLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_AdvancedLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string class_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_AdvancedLine.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_name().data(), static_cast<int>(this->instance_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_AdvancedLine.instance_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapLine line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapProperty property = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes desc = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapAttribute attribute = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_AdvancedLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_AdvancedLine)
  return false;
#undef DO_
}

void Message_AdvancedLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_AdvancedLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedLine.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedLine.instance_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_name(), output);
  }

  // .rbk.protocol.Message_MapLine line = 3;
  if (this->has_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_line(), output);
  }

  // repeated .rbk.protocol.Message_MapProperty property = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->property(static_cast<int>(i)),
      output);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->desc(), output);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 10;
  if (this->has_attribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_attribute(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_AdvancedLine)
}

::google::protobuf::uint8* Message_AdvancedLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_AdvancedLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedLine.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedLine.instance_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_name(), target);
  }

  // .rbk.protocol.Message_MapLine line = 3;
  if (this->has_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_line(), deterministic, target);
  }

  // repeated .rbk.protocol.Message_MapProperty property = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->property(static_cast<int>(i)), deterministic, target);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->desc(), target);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 10;
  if (this->has_attribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_attribute(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_AdvancedLine)
  return target;
}

size_t Message_AdvancedLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_AdvancedLine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_MapProperty property = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property(static_cast<int>(i)));
    }
  }

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_name());
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  // .rbk.protocol.Message_MapLine line = 3;
  if (this->has_line()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *line_);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 10;
  if (this->has_attribute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attribute_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_AdvancedLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_AdvancedLine)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_AdvancedLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_AdvancedLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_AdvancedLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_AdvancedLine)
    MergeFrom(*source);
  }
}

void Message_AdvancedLine::MergeFrom(const Message_AdvancedLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_AdvancedLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_.MergeFrom(from.property_);
  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.instance_name().size() > 0) {

    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_line()) {
    mutable_line()->::rbk::protocol::Message_MapLine::MergeFrom(from.line());
  }
  if (from.has_attribute()) {
    mutable_attribute()->::rbk::protocol::Message_MapAttribute::MergeFrom(from.attribute());
  }
}

void Message_AdvancedLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_AdvancedLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_AdvancedLine::CopyFrom(const Message_AdvancedLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_AdvancedLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_AdvancedLine::IsInitialized() const {
  return true;
}

void Message_AdvancedLine::Swap(Message_AdvancedLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_AdvancedLine::InternalSwap(Message_AdvancedLine* other) {
  using std::swap;
  CastToBase(&property_)->InternalSwap(CastToBase(&other->property_));
  class_name_.Swap(&other->class_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_name_.Swap(&other->instance_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(line_, other->line_);
  swap(attribute_, other->attribute_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_AdvancedLine::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_AdvancedCurve::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_AdvancedCurve_default_instance_._instance.get_mutable()->start_pos_ = const_cast< ::rbk::protocol::Message_AdvancedPoint*>(
      ::rbk::protocol::Message_AdvancedPoint::internal_default_instance());
  ::rbk::protocol::_Message_AdvancedCurve_default_instance_._instance.get_mutable()->end_pos_ = const_cast< ::rbk::protocol::Message_AdvancedPoint*>(
      ::rbk::protocol::Message_AdvancedPoint::internal_default_instance());
  ::rbk::protocol::_Message_AdvancedCurve_default_instance_._instance.get_mutable()->control_pos1_ = const_cast< ::rbk::protocol::Message_MapPos*>(
      ::rbk::protocol::Message_MapPos::internal_default_instance());
  ::rbk::protocol::_Message_AdvancedCurve_default_instance_._instance.get_mutable()->control_pos2_ = const_cast< ::rbk::protocol::Message_MapPos*>(
      ::rbk::protocol::Message_MapPos::internal_default_instance());
  ::rbk::protocol::_Message_AdvancedCurve_default_instance_._instance.get_mutable()->control_pos3_ = const_cast< ::rbk::protocol::Message_MapPos*>(
      ::rbk::protocol::Message_MapPos::internal_default_instance());
  ::rbk::protocol::_Message_AdvancedCurve_default_instance_._instance.get_mutable()->attribute_ = const_cast< ::rbk::protocol::Message_MapAttribute*>(
      ::rbk::protocol::Message_MapAttribute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_AdvancedCurve::kClassNameFieldNumber;
const int Message_AdvancedCurve::kInstanceNameFieldNumber;
const int Message_AdvancedCurve::kStartPosFieldNumber;
const int Message_AdvancedCurve::kEndPosFieldNumber;
const int Message_AdvancedCurve::kControlPos1FieldNumber;
const int Message_AdvancedCurve::kControlPos2FieldNumber;
const int Message_AdvancedCurve::kPropertyFieldNumber;
const int Message_AdvancedCurve::kDescFieldNumber;
const int Message_AdvancedCurve::kControlPos3FieldNumber;
const int Message_AdvancedCurve::kDevicesFieldNumber;
const int Message_AdvancedCurve::kAttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_AdvancedCurve::Message_AdvancedCurve()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedCurve.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_AdvancedCurve)
}
Message_AdvancedCurve::Message_AdvancedCurve(const Message_AdvancedCurve& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_(from.property_),
      devices_(from.devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_name().size() > 0) {
    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_start_pos()) {
    start_pos_ = new ::rbk::protocol::Message_AdvancedPoint(*from.start_pos_);
  } else {
    start_pos_ = NULL;
  }
  if (from.has_end_pos()) {
    end_pos_ = new ::rbk::protocol::Message_AdvancedPoint(*from.end_pos_);
  } else {
    end_pos_ = NULL;
  }
  if (from.has_control_pos1()) {
    control_pos1_ = new ::rbk::protocol::Message_MapPos(*from.control_pos1_);
  } else {
    control_pos1_ = NULL;
  }
  if (from.has_control_pos2()) {
    control_pos2_ = new ::rbk::protocol::Message_MapPos(*from.control_pos2_);
  } else {
    control_pos2_ = NULL;
  }
  if (from.has_control_pos3()) {
    control_pos3_ = new ::rbk::protocol::Message_MapPos(*from.control_pos3_);
  } else {
    control_pos3_ = NULL;
  }
  if (from.has_attribute()) {
    attribute_ = new ::rbk::protocol::Message_MapAttribute(*from.attribute_);
  } else {
    attribute_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_AdvancedCurve)
}

void Message_AdvancedCurve::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attribute_) -
      reinterpret_cast<char*>(&start_pos_)) + sizeof(attribute_));
}

Message_AdvancedCurve::~Message_AdvancedCurve() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_AdvancedCurve)
  SharedDtor();
}

void Message_AdvancedCurve::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_pos_;
  if (this != internal_default_instance()) delete end_pos_;
  if (this != internal_default_instance()) delete control_pos1_;
  if (this != internal_default_instance()) delete control_pos2_;
  if (this != internal_default_instance()) delete control_pos3_;
  if (this != internal_default_instance()) delete attribute_;
}

void Message_AdvancedCurve::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_AdvancedCurve::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_AdvancedCurve& Message_AdvancedCurve::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedCurve.base);
  return *internal_default_instance();
}


void Message_AdvancedCurve::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_AdvancedCurve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_.Clear();
  devices_.Clear();
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) {
    delete start_pos_;
  }
  start_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_pos_ != NULL) {
    delete end_pos_;
  }
  end_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && control_pos1_ != NULL) {
    delete control_pos1_;
  }
  control_pos1_ = NULL;
  if (GetArenaNoVirtual() == NULL && control_pos2_ != NULL) {
    delete control_pos2_;
  }
  control_pos2_ = NULL;
  if (GetArenaNoVirtual() == NULL && control_pos3_ != NULL) {
    delete control_pos3_;
  }
  control_pos3_ = NULL;
  if (GetArenaNoVirtual() == NULL && attribute_ != NULL) {
    delete attribute_;
  }
  attribute_ = NULL;
  _internal_metadata_.Clear();
}

bool Message_AdvancedCurve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_AdvancedCurve)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string class_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_AdvancedCurve.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_name().data(), static_cast<int>(this->instance_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_AdvancedCurve.instance_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_AdvancedPoint start_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_AdvancedPoint end_pos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapPos control_pos1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_pos1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapPos control_pos2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_pos2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapProperty property = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes desc = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapPos control_pos3 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_pos3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_Device devices = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapAttribute attribute = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_AdvancedCurve)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_AdvancedCurve)
  return false;
#undef DO_
}

void Message_AdvancedCurve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_AdvancedCurve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedCurve.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedCurve.instance_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_name(), output);
  }

  // .rbk.protocol.Message_AdvancedPoint start_pos = 3;
  if (this->has_start_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_start_pos(), output);
  }

  // .rbk.protocol.Message_AdvancedPoint end_pos = 4;
  if (this->has_end_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_end_pos(), output);
  }

  // .rbk.protocol.Message_MapPos control_pos1 = 5;
  if (this->has_control_pos1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_control_pos1(), output);
  }

  // .rbk.protocol.Message_MapPos control_pos2 = 6;
  if (this->has_control_pos2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_control_pos2(), output);
  }

  // repeated .rbk.protocol.Message_MapProperty property = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->property(static_cast<int>(i)),
      output);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->desc(), output);
  }

  // .rbk.protocol.Message_MapPos control_pos3 = 9;
  if (this->has_control_pos3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_control_pos3(), output);
  }

  // repeated .rbk.protocol.Message_Device devices = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->devices(static_cast<int>(i)),
      output);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 15;
  if (this->has_attribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_attribute(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_AdvancedCurve)
}

::google::protobuf::uint8* Message_AdvancedCurve::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_AdvancedCurve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedCurve.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedCurve.instance_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_name(), target);
  }

  // .rbk.protocol.Message_AdvancedPoint start_pos = 3;
  if (this->has_start_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_start_pos(), deterministic, target);
  }

  // .rbk.protocol.Message_AdvancedPoint end_pos = 4;
  if (this->has_end_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_end_pos(), deterministic, target);
  }

  // .rbk.protocol.Message_MapPos control_pos1 = 5;
  if (this->has_control_pos1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_control_pos1(), deterministic, target);
  }

  // .rbk.protocol.Message_MapPos control_pos2 = 6;
  if (this->has_control_pos2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_control_pos2(), deterministic, target);
  }

  // repeated .rbk.protocol.Message_MapProperty property = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->property(static_cast<int>(i)), deterministic, target);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->desc(), target);
  }

  // .rbk.protocol.Message_MapPos control_pos3 = 9;
  if (this->has_control_pos3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_control_pos3(), deterministic, target);
  }

  // repeated .rbk.protocol.Message_Device devices = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->devices(static_cast<int>(i)), deterministic, target);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 15;
  if (this->has_attribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_attribute(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_AdvancedCurve)
  return target;
}

size_t Message_AdvancedCurve::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_AdvancedCurve)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_MapProperty property = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_Device devices = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_name());
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  // .rbk.protocol.Message_AdvancedPoint start_pos = 3;
  if (this->has_start_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_pos_);
  }

  // .rbk.protocol.Message_AdvancedPoint end_pos = 4;
  if (this->has_end_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_pos_);
  }

  // .rbk.protocol.Message_MapPos control_pos1 = 5;
  if (this->has_control_pos1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *control_pos1_);
  }

  // .rbk.protocol.Message_MapPos control_pos2 = 6;
  if (this->has_control_pos2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *control_pos2_);
  }

  // .rbk.protocol.Message_MapPos control_pos3 = 9;
  if (this->has_control_pos3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *control_pos3_);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 15;
  if (this->has_attribute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attribute_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_AdvancedCurve::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_AdvancedCurve)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_AdvancedCurve* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_AdvancedCurve>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_AdvancedCurve)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_AdvancedCurve)
    MergeFrom(*source);
  }
}

void Message_AdvancedCurve::MergeFrom(const Message_AdvancedCurve& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_AdvancedCurve)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_.MergeFrom(from.property_);
  devices_.MergeFrom(from.devices_);
  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.instance_name().size() > 0) {

    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_start_pos()) {
    mutable_start_pos()->::rbk::protocol::Message_AdvancedPoint::MergeFrom(from.start_pos());
  }
  if (from.has_end_pos()) {
    mutable_end_pos()->::rbk::protocol::Message_AdvancedPoint::MergeFrom(from.end_pos());
  }
  if (from.has_control_pos1()) {
    mutable_control_pos1()->::rbk::protocol::Message_MapPos::MergeFrom(from.control_pos1());
  }
  if (from.has_control_pos2()) {
    mutable_control_pos2()->::rbk::protocol::Message_MapPos::MergeFrom(from.control_pos2());
  }
  if (from.has_control_pos3()) {
    mutable_control_pos3()->::rbk::protocol::Message_MapPos::MergeFrom(from.control_pos3());
  }
  if (from.has_attribute()) {
    mutable_attribute()->::rbk::protocol::Message_MapAttribute::MergeFrom(from.attribute());
  }
}

void Message_AdvancedCurve::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_AdvancedCurve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_AdvancedCurve::CopyFrom(const Message_AdvancedCurve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_AdvancedCurve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_AdvancedCurve::IsInitialized() const {
  return true;
}

void Message_AdvancedCurve::Swap(Message_AdvancedCurve* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_AdvancedCurve::InternalSwap(Message_AdvancedCurve* other) {
  using std::swap;
  CastToBase(&property_)->InternalSwap(CastToBase(&other->property_));
  CastToBase(&devices_)->InternalSwap(CastToBase(&other->devices_));
  class_name_.Swap(&other->class_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_name_.Swap(&other->instance_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_pos_, other->start_pos_);
  swap(end_pos_, other->end_pos_);
  swap(control_pos1_, other->control_pos1_);
  swap(control_pos2_, other->control_pos2_);
  swap(control_pos3_, other->control_pos3_);
  swap(attribute_, other->attribute_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_AdvancedCurve::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_AdvancedArea::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_AdvancedArea_default_instance_._instance.get_mutable()->attribute_ = const_cast< ::rbk::protocol::Message_MapAttribute*>(
      ::rbk::protocol::Message_MapAttribute::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_AdvancedArea::kClassNameFieldNumber;
const int Message_AdvancedArea::kInstanceNameFieldNumber;
const int Message_AdvancedArea::kPosGroupFieldNumber;
const int Message_AdvancedArea::kDirFieldNumber;
const int Message_AdvancedArea::kPropertyFieldNumber;
const int Message_AdvancedArea::kDescFieldNumber;
const int Message_AdvancedArea::kDevicesFieldNumber;
const int Message_AdvancedArea::kAttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_AdvancedArea::Message_AdvancedArea()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedArea.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_AdvancedArea)
}
Message_AdvancedArea::Message_AdvancedArea(const Message_AdvancedArea& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pos_group_(from.pos_group_),
      property_(from.property_),
      devices_(from.devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance_name().size() > 0) {
    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_attribute()) {
    attribute_ = new ::rbk::protocol::Message_MapAttribute(*from.attribute_);
  } else {
    attribute_ = NULL;
  }
  dir_ = from.dir_;
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_AdvancedArea)
}

void Message_AdvancedArea::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&attribute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dir_) -
      reinterpret_cast<char*>(&attribute_)) + sizeof(dir_));
}

Message_AdvancedArea::~Message_AdvancedArea() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_AdvancedArea)
  SharedDtor();
}

void Message_AdvancedArea::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete attribute_;
}

void Message_AdvancedArea::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_AdvancedArea::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_AdvancedArea& Message_AdvancedArea::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_AdvancedArea.base);
  return *internal_default_instance();
}


void Message_AdvancedArea::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_AdvancedArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pos_group_.Clear();
  property_.Clear();
  devices_.Clear();
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && attribute_ != NULL) {
    delete attribute_;
  }
  attribute_ = NULL;
  dir_ = 0;
  _internal_metadata_.Clear();
}

bool Message_AdvancedArea::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_AdvancedArea)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string class_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_AdvancedArea.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance_name().data(), static_cast<int>(this->instance_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_AdvancedArea.instance_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapPos pos_group = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pos_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dir = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapProperty property = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes desc = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_Device devices = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapAttribute attribute = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_AdvancedArea)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_AdvancedArea)
  return false;
#undef DO_
}

void Message_AdvancedArea::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_AdvancedArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedArea.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->class_name(), output);
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedArea.instance_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance_name(), output);
  }

  // repeated .rbk.protocol.Message_MapPos pos_group = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pos_group_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->pos_group(static_cast<int>(i)),
      output);
  }

  // double dir = 4;
  if (this->dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dir(), output);
  }

  // repeated .rbk.protocol.Message_MapProperty property = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->property(static_cast<int>(i)),
      output);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->desc(), output);
  }

  // repeated .rbk.protocol.Message_Device devices = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->devices(static_cast<int>(i)),
      output);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 15;
  if (this->has_attribute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_attribute(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_AdvancedArea)
}

::google::protobuf::uint8* Message_AdvancedArea::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_AdvancedArea)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedArea.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->class_name(), target);
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance_name().data(), static_cast<int>(this->instance_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_AdvancedArea.instance_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance_name(), target);
  }

  // repeated .rbk.protocol.Message_MapPos pos_group = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pos_group_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pos_group(static_cast<int>(i)), deterministic, target);
  }

  // double dir = 4;
  if (this->dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dir(), target);
  }

  // repeated .rbk.protocol.Message_MapProperty property = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->property(static_cast<int>(i)), deterministic, target);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->desc(), target);
  }

  // repeated .rbk.protocol.Message_Device devices = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->devices(static_cast<int>(i)), deterministic, target);
  }

  // .rbk.protocol.Message_MapAttribute attribute = 15;
  if (this->has_attribute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_attribute(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_AdvancedArea)
  return target;
}

size_t Message_AdvancedArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_AdvancedArea)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_MapPos pos_group = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pos_group_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pos_group(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_MapProperty property = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_Device devices = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  // string class_name = 1;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // string instance_name = 2;
  if (this->instance_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance_name());
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  // .rbk.protocol.Message_MapAttribute attribute = 15;
  if (this->has_attribute()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attribute_);
  }

  // double dir = 4;
  if (this->dir() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_AdvancedArea::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_AdvancedArea)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_AdvancedArea* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_AdvancedArea>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_AdvancedArea)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_AdvancedArea)
    MergeFrom(*source);
  }
}

void Message_AdvancedArea::MergeFrom(const Message_AdvancedArea& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_AdvancedArea)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pos_group_.MergeFrom(from.pos_group_);
  property_.MergeFrom(from.property_);
  devices_.MergeFrom(from.devices_);
  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.instance_name().size() > 0) {

    instance_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_attribute()) {
    mutable_attribute()->::rbk::protocol::Message_MapAttribute::MergeFrom(from.attribute());
  }
  if (from.dir() != 0) {
    set_dir(from.dir());
  }
}

void Message_AdvancedArea::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_AdvancedArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_AdvancedArea::CopyFrom(const Message_AdvancedArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_AdvancedArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_AdvancedArea::IsInitialized() const {
  return true;
}

void Message_AdvancedArea::Swap(Message_AdvancedArea* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_AdvancedArea::InternalSwap(Message_AdvancedArea* other) {
  using std::swap;
  CastToBase(&pos_group_)->InternalSwap(CastToBase(&other->pos_group_));
  CastToBase(&property_)->InternalSwap(CastToBase(&other->property_));
  CastToBase(&devices_)->InternalSwap(CastToBase(&other->devices_));
  class_name_.Swap(&other->class_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_name_.Swap(&other->instance_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(attribute_, other->attribute_);
  swap(dir_, other->dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_AdvancedArea::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_VirtualLineList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_VirtualLineList::kVirtualMapLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_VirtualLineList::Message_VirtualLineList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_VirtualLineList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_VirtualLineList)
}
Message_VirtualLineList::Message_VirtualLineList(const Message_VirtualLineList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      virtual_map_line_(from.virtual_map_line_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_VirtualLineList)
}

void Message_VirtualLineList::SharedCtor() {
}

Message_VirtualLineList::~Message_VirtualLineList() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_VirtualLineList)
  SharedDtor();
}

void Message_VirtualLineList::SharedDtor() {
}

void Message_VirtualLineList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_VirtualLineList::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_VirtualLineList& Message_VirtualLineList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_VirtualLineList.base);
  return *internal_default_instance();
}


void Message_VirtualLineList::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_VirtualLineList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  virtual_map_line_.Clear();
  _internal_metadata_.Clear();
}

bool Message_VirtualLineList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_VirtualLineList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rbk.protocol.Message_MapLine virtual_map_line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_virtual_map_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_VirtualLineList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_VirtualLineList)
  return false;
#undef DO_
}

void Message_VirtualLineList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_VirtualLineList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rbk.protocol.Message_MapLine virtual_map_line = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->virtual_map_line_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->virtual_map_line(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_VirtualLineList)
}

::google::protobuf::uint8* Message_VirtualLineList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_VirtualLineList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rbk.protocol.Message_MapLine virtual_map_line = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->virtual_map_line_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->virtual_map_line(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_VirtualLineList)
  return target;
}

size_t Message_VirtualLineList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_VirtualLineList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_MapLine virtual_map_line = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->virtual_map_line_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->virtual_map_line(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_VirtualLineList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_VirtualLineList)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_VirtualLineList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_VirtualLineList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_VirtualLineList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_VirtualLineList)
    MergeFrom(*source);
  }
}

void Message_VirtualLineList::MergeFrom(const Message_VirtualLineList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_VirtualLineList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  virtual_map_line_.MergeFrom(from.virtual_map_line_);
}

void Message_VirtualLineList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_VirtualLineList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_VirtualLineList::CopyFrom(const Message_VirtualLineList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_VirtualLineList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_VirtualLineList::IsInitialized() const {
  return true;
}

void Message_VirtualLineList::Swap(Message_VirtualLineList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_VirtualLineList::InternalSwap(Message_VirtualLineList* other) {
  using std::swap;
  CastToBase(&virtual_map_line_)->InternalSwap(CastToBase(&other->virtual_map_line_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_VirtualLineList::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_LaserDevice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_LaserDevice::kIdFieldNumber;
const int Message_LaserDevice::kLaserMarginPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_LaserDevice::Message_LaserDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_LaserDevice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_LaserDevice)
}
Message_LaserDevice::Message_LaserDevice(const Message_LaserDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      laser_margin_pos_(from.laser_margin_pos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_LaserDevice)
}

void Message_LaserDevice::SharedCtor() {
  id_ = 0u;
}

Message_LaserDevice::~Message_LaserDevice() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_LaserDevice)
  SharedDtor();
}

void Message_LaserDevice::SharedDtor() {
}

void Message_LaserDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_LaserDevice::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_LaserDevice& Message_LaserDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_LaserDevice.base);
  return *internal_default_instance();
}


void Message_LaserDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_LaserDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  laser_margin_pos_.Clear();
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool Message_LaserDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_LaserDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapPos laser_margin_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_laser_margin_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_LaserDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_LaserDevice)
  return false;
#undef DO_
}

void Message_LaserDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_LaserDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated .rbk.protocol.Message_MapPos laser_margin_pos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->laser_margin_pos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->laser_margin_pos(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_LaserDevice)
}

::google::protobuf::uint8* Message_LaserDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_LaserDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated .rbk.protocol.Message_MapPos laser_margin_pos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->laser_margin_pos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->laser_margin_pos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_LaserDevice)
  return target;
}

size_t Message_LaserDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_LaserDevice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_MapPos laser_margin_pos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->laser_margin_pos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->laser_margin_pos(static_cast<int>(i)));
    }
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_LaserDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_LaserDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_LaserDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_LaserDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_LaserDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_LaserDevice)
    MergeFrom(*source);
  }
}

void Message_LaserDevice::MergeFrom(const Message_LaserDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_LaserDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  laser_margin_pos_.MergeFrom(from.laser_margin_pos_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Message_LaserDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_LaserDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_LaserDevice::CopyFrom(const Message_LaserDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_LaserDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_LaserDevice::IsInitialized() const {
  return true;
}

void Message_LaserDevice::Swap(Message_LaserDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_LaserDevice::InternalSwap(Message_LaserDevice* other) {
  using std::swap;
  CastToBase(&laser_margin_pos_)->InternalSwap(CastToBase(&other->laser_margin_pos_));
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_LaserDevice::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_Device::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_Device::kModelNameFieldNumber;
const int Message_Device::kLaserDevicesFieldNumber;
const int Message_Device::kUltrasonicDistFieldNumber;
const int Message_Device::kFallingdownDistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_Device::Message_Device()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_Device.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_Device)
}
Message_Device::Message_Device(const Message_Device& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      laser_devices_(from.laser_devices_),
      ultrasonic_dist_(from.ultrasonic_dist_),
      fallingdown_dist_(from.fallingdown_dist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model_name().size() > 0) {
    model_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_Device)
}

void Message_Device::SharedCtor() {
  model_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Message_Device::~Message_Device() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_Device)
  SharedDtor();
}

void Message_Device::SharedDtor() {
  model_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message_Device::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_Device::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_Device& Message_Device::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_Device.base);
  return *internal_default_instance();
}


void Message_Device::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  laser_devices_.Clear();
  ultrasonic_dist_.Clear();
  fallingdown_dist_.Clear();
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Message_Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_Device)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string model_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model_name().data(), static_cast<int>(this->model_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_Device.model_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_LaserDevice laser_devices = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_laser_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double ultrasonic_dist = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_ultrasonic_dist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 50u, input, this->mutable_ultrasonic_dist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double fallingdown_dist = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_fallingdown_dist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 58u, input, this->mutable_fallingdown_dist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_Device)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_Device)
  return false;
#undef DO_
}

void Message_Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (this->model_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model_name().data(), static_cast<int>(this->model_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_Device.model_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->model_name(), output);
  }

  // repeated .rbk.protocol.Message_LaserDevice laser_devices = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->laser_devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->laser_devices(static_cast<int>(i)),
      output);
  }

  // repeated double ultrasonic_dist = 6;
  if (this->ultrasonic_dist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ultrasonic_dist_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->ultrasonic_dist().data(), this->ultrasonic_dist_size(), output);
  }

  // repeated double fallingdown_dist = 7;
  if (this->fallingdown_dist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fallingdown_dist_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->fallingdown_dist().data(), this->fallingdown_dist_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_Device)
}

::google::protobuf::uint8* Message_Device::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (this->model_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model_name().data(), static_cast<int>(this->model_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_Device.model_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->model_name(), target);
  }

  // repeated .rbk.protocol.Message_LaserDevice laser_devices = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->laser_devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->laser_devices(static_cast<int>(i)), deterministic, target);
  }

  // repeated double ultrasonic_dist = 6;
  if (this->ultrasonic_dist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _ultrasonic_dist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->ultrasonic_dist_, target);
  }

  // repeated double fallingdown_dist = 7;
  if (this->fallingdown_dist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _fallingdown_dist_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->fallingdown_dist_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_Device)
  return target;
}

size_t Message_Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_Device)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_LaserDevice laser_devices = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->laser_devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->laser_devices(static_cast<int>(i)));
    }
  }

  // repeated double ultrasonic_dist = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->ultrasonic_dist_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ultrasonic_dist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double fallingdown_dist = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->fallingdown_dist_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fallingdown_dist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string model_name = 1;
  if (this->model_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Device::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Device* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_Device>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_Device)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_Device)
    MergeFrom(*source);
  }
}

void Message_Device::MergeFrom(const Message_Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  laser_devices_.MergeFrom(from.laser_devices_);
  ultrasonic_dist_.MergeFrom(from.ultrasonic_dist_);
  fallingdown_dist_.MergeFrom(from.fallingdown_dist_);
  if (from.model_name().size() > 0) {

    model_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
}

void Message_Device::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Device::CopyFrom(const Message_Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Device::IsInitialized() const {
  return true;
}

void Message_Device::Swap(Message_Device* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_Device::InternalSwap(Message_Device* other) {
  using std::swap;
  CastToBase(&laser_devices_)->InternalSwap(CastToBase(&other->laser_devices_));
  ultrasonic_dist_.InternalSwap(&other->ultrasonic_dist_);
  fallingdown_dist_.InternalSwap(&other->fallingdown_dist_);
  model_name_.Swap(&other->model_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_Device::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_PatrolRouteStation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_PatrolRouteStation::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_PatrolRouteStation::Message_PatrolRouteStation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_PatrolRouteStation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_PatrolRouteStation)
}
Message_PatrolRouteStation::Message_PatrolRouteStation(const Message_PatrolRouteStation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_PatrolRouteStation)
}

void Message_PatrolRouteStation::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Message_PatrolRouteStation::~Message_PatrolRouteStation() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_PatrolRouteStation)
  SharedDtor();
}

void Message_PatrolRouteStation::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message_PatrolRouteStation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_PatrolRouteStation::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_PatrolRouteStation& Message_PatrolRouteStation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_PatrolRouteStation.base);
  return *internal_default_instance();
}


void Message_PatrolRouteStation::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_PatrolRouteStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Message_PatrolRouteStation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_PatrolRouteStation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_PatrolRouteStation.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_PatrolRouteStation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_PatrolRouteStation)
  return false;
#undef DO_
}

void Message_PatrolRouteStation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_PatrolRouteStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_PatrolRouteStation.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_PatrolRouteStation)
}

::google::protobuf::uint8* Message_PatrolRouteStation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_PatrolRouteStation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_PatrolRouteStation.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_PatrolRouteStation)
  return target;
}

size_t Message_PatrolRouteStation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_PatrolRouteStation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_PatrolRouteStation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_PatrolRouteStation)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_PatrolRouteStation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_PatrolRouteStation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_PatrolRouteStation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_PatrolRouteStation)
    MergeFrom(*source);
  }
}

void Message_PatrolRouteStation::MergeFrom(const Message_PatrolRouteStation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_PatrolRouteStation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void Message_PatrolRouteStation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_PatrolRouteStation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_PatrolRouteStation::CopyFrom(const Message_PatrolRouteStation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_PatrolRouteStation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_PatrolRouteStation::IsInitialized() const {
  return true;
}

void Message_PatrolRouteStation::Swap(Message_PatrolRouteStation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_PatrolRouteStation::InternalSwap(Message_PatrolRouteStation* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_PatrolRouteStation::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_PatrolRoute::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_PatrolRoute_default_instance_._instance.get_mutable()->max_speed_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::rbk::protocol::_Message_PatrolRoute_default_instance_._instance.get_mutable()->max_acc_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::rbk::protocol::_Message_PatrolRoute_default_instance_._instance.get_mutable()->max_rot_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::rbk::protocol::_Message_PatrolRoute_default_instance_._instance.get_mutable()->max_rot_acc_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::rbk::protocol::_Message_PatrolRoute_default_instance_._instance.get_mutable()->max_dec_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
  ::rbk::protocol::_Message_PatrolRoute_default_instance_._instance.get_mutable()->max_rot_dec_ = const_cast< ::google::protobuf::DoubleValue*>(
      ::google::protobuf::DoubleValue::internal_default_instance());
}
void Message_PatrolRoute::clear_max_speed() {
  if (GetArenaNoVirtual() == NULL && max_speed_ != NULL) {
    delete max_speed_;
  }
  max_speed_ = NULL;
}
void Message_PatrolRoute::clear_max_acc() {
  if (GetArenaNoVirtual() == NULL && max_acc_ != NULL) {
    delete max_acc_;
  }
  max_acc_ = NULL;
}
void Message_PatrolRoute::clear_max_rot() {
  if (GetArenaNoVirtual() == NULL && max_rot_ != NULL) {
    delete max_rot_;
  }
  max_rot_ = NULL;
}
void Message_PatrolRoute::clear_max_rot_acc() {
  if (GetArenaNoVirtual() == NULL && max_rot_acc_ != NULL) {
    delete max_rot_acc_;
  }
  max_rot_acc_ = NULL;
}
void Message_PatrolRoute::clear_max_dec() {
  if (GetArenaNoVirtual() == NULL && max_dec_ != NULL) {
    delete max_dec_;
  }
  max_dec_ = NULL;
}
void Message_PatrolRoute::clear_max_rot_dec() {
  if (GetArenaNoVirtual() == NULL && max_rot_dec_ != NULL) {
    delete max_rot_dec_;
  }
  max_rot_dec_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_PatrolRoute::kNameFieldNumber;
const int Message_PatrolRoute::kStationListFieldNumber;
const int Message_PatrolRoute::kMaxSpeedFieldNumber;
const int Message_PatrolRoute::kMaxAccFieldNumber;
const int Message_PatrolRoute::kMaxRotFieldNumber;
const int Message_PatrolRoute::kMaxRotAccFieldNumber;
const int Message_PatrolRoute::kDescFieldNumber;
const int Message_PatrolRoute::kMaxDecFieldNumber;
const int Message_PatrolRoute::kMaxRotDecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_PatrolRoute::Message_PatrolRoute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_PatrolRoute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_PatrolRoute)
}
Message_PatrolRoute::Message_PatrolRoute(const Message_PatrolRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      station_list_(from.station_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_max_speed()) {
    max_speed_ = new ::google::protobuf::DoubleValue(*from.max_speed_);
  } else {
    max_speed_ = NULL;
  }
  if (from.has_max_acc()) {
    max_acc_ = new ::google::protobuf::DoubleValue(*from.max_acc_);
  } else {
    max_acc_ = NULL;
  }
  if (from.has_max_rot()) {
    max_rot_ = new ::google::protobuf::DoubleValue(*from.max_rot_);
  } else {
    max_rot_ = NULL;
  }
  if (from.has_max_rot_acc()) {
    max_rot_acc_ = new ::google::protobuf::DoubleValue(*from.max_rot_acc_);
  } else {
    max_rot_acc_ = NULL;
  }
  if (from.has_max_dec()) {
    max_dec_ = new ::google::protobuf::DoubleValue(*from.max_dec_);
  } else {
    max_dec_ = NULL;
  }
  if (from.has_max_rot_dec()) {
    max_rot_dec_ = new ::google::protobuf::DoubleValue(*from.max_rot_dec_);
  } else {
    max_rot_dec_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_PatrolRoute)
}

void Message_PatrolRoute::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_rot_dec_) -
      reinterpret_cast<char*>(&max_speed_)) + sizeof(max_rot_dec_));
}

Message_PatrolRoute::~Message_PatrolRoute() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_PatrolRoute)
  SharedDtor();
}

void Message_PatrolRoute::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete max_speed_;
  if (this != internal_default_instance()) delete max_acc_;
  if (this != internal_default_instance()) delete max_rot_;
  if (this != internal_default_instance()) delete max_rot_acc_;
  if (this != internal_default_instance()) delete max_dec_;
  if (this != internal_default_instance()) delete max_rot_dec_;
}

void Message_PatrolRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_PatrolRoute::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_PatrolRoute& Message_PatrolRoute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_PatrolRoute.base);
  return *internal_default_instance();
}


void Message_PatrolRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_PatrolRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  station_list_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && max_speed_ != NULL) {
    delete max_speed_;
  }
  max_speed_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_acc_ != NULL) {
    delete max_acc_;
  }
  max_acc_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_rot_ != NULL) {
    delete max_rot_;
  }
  max_rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_rot_acc_ != NULL) {
    delete max_rot_acc_;
  }
  max_rot_acc_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_dec_ != NULL) {
    delete max_dec_;
  }
  max_dec_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_rot_dec_ != NULL) {
    delete max_rot_dec_;
  }
  max_rot_dec_ = NULL;
  _internal_metadata_.Clear();
}

bool Message_PatrolRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_PatrolRoute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_PatrolRoute.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_PatrolRouteStation station_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_station_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue max_speed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue max_acc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_acc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue max_rot = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue max_rot_acc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_rot_acc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes desc = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue max_dec = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_dec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.DoubleValue max_rot_dec = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_rot_dec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_PatrolRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_PatrolRoute)
  return false;
#undef DO_
}

void Message_PatrolRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_PatrolRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_PatrolRoute.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .rbk.protocol.Message_PatrolRouteStation station_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->station_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->station_list(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.DoubleValue max_speed = 4;
  if (this->has_max_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_max_speed(), output);
  }

  // .google.protobuf.DoubleValue max_acc = 5;
  if (this->has_max_acc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_max_acc(), output);
  }

  // .google.protobuf.DoubleValue max_rot = 6;
  if (this->has_max_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_max_rot(), output);
  }

  // .google.protobuf.DoubleValue max_rot_acc = 7;
  if (this->has_max_rot_acc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_max_rot_acc(), output);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->desc(), output);
  }

  // .google.protobuf.DoubleValue max_dec = 9;
  if (this->has_max_dec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_max_dec(), output);
  }

  // .google.protobuf.DoubleValue max_rot_dec = 10;
  if (this->has_max_rot_dec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_max_rot_dec(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_PatrolRoute)
}

::google::protobuf::uint8* Message_PatrolRoute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_PatrolRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_PatrolRoute.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .rbk.protocol.Message_PatrolRouteStation station_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->station_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->station_list(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.DoubleValue max_speed = 4;
  if (this->has_max_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_max_speed(), deterministic, target);
  }

  // .google.protobuf.DoubleValue max_acc = 5;
  if (this->has_max_acc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_max_acc(), deterministic, target);
  }

  // .google.protobuf.DoubleValue max_rot = 6;
  if (this->has_max_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_max_rot(), deterministic, target);
  }

  // .google.protobuf.DoubleValue max_rot_acc = 7;
  if (this->has_max_rot_acc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_max_rot_acc(), deterministic, target);
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->desc(), target);
  }

  // .google.protobuf.DoubleValue max_dec = 9;
  if (this->has_max_dec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_max_dec(), deterministic, target);
  }

  // .google.protobuf.DoubleValue max_rot_dec = 10;
  if (this->has_max_rot_dec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_max_rot_dec(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_PatrolRoute)
  return target;
}

size_t Message_PatrolRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_PatrolRoute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_PatrolRouteStation station_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->station_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->station_list(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes desc = 8;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->desc());
  }

  // .google.protobuf.DoubleValue max_speed = 4;
  if (this->has_max_speed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_speed_);
  }

  // .google.protobuf.DoubleValue max_acc = 5;
  if (this->has_max_acc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_acc_);
  }

  // .google.protobuf.DoubleValue max_rot = 6;
  if (this->has_max_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_rot_);
  }

  // .google.protobuf.DoubleValue max_rot_acc = 7;
  if (this->has_max_rot_acc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_rot_acc_);
  }

  // .google.protobuf.DoubleValue max_dec = 9;
  if (this->has_max_dec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_dec_);
  }

  // .google.protobuf.DoubleValue max_rot_dec = 10;
  if (this->has_max_rot_dec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_rot_dec_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_PatrolRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_PatrolRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_PatrolRoute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_PatrolRoute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_PatrolRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_PatrolRoute)
    MergeFrom(*source);
  }
}

void Message_PatrolRoute::MergeFrom(const Message_PatrolRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_PatrolRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  station_list_.MergeFrom(from.station_list_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  if (from.has_max_speed()) {
    mutable_max_speed()->::google::protobuf::DoubleValue::MergeFrom(from.max_speed());
  }
  if (from.has_max_acc()) {
    mutable_max_acc()->::google::protobuf::DoubleValue::MergeFrom(from.max_acc());
  }
  if (from.has_max_rot()) {
    mutable_max_rot()->::google::protobuf::DoubleValue::MergeFrom(from.max_rot());
  }
  if (from.has_max_rot_acc()) {
    mutable_max_rot_acc()->::google::protobuf::DoubleValue::MergeFrom(from.max_rot_acc());
  }
  if (from.has_max_dec()) {
    mutable_max_dec()->::google::protobuf::DoubleValue::MergeFrom(from.max_dec());
  }
  if (from.has_max_rot_dec()) {
    mutable_max_rot_dec()->::google::protobuf::DoubleValue::MergeFrom(from.max_rot_dec());
  }
}

void Message_PatrolRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_PatrolRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_PatrolRoute::CopyFrom(const Message_PatrolRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_PatrolRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_PatrolRoute::IsInitialized() const {
  return true;
}

void Message_PatrolRoute::Swap(Message_PatrolRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_PatrolRoute::InternalSwap(Message_PatrolRoute* other) {
  using std::swap;
  CastToBase(&station_list_)->InternalSwap(CastToBase(&other->station_list_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  desc_.Swap(&other->desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_speed_, other->max_speed_);
  swap(max_acc_, other->max_acc_);
  swap(max_rot_, other->max_rot_);
  swap(max_rot_acc_, other->max_rot_acc_);
  swap(max_dec_, other->max_dec_);
  swap(max_rot_dec_, other->max_rot_dec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_PatrolRoute::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message_Map::InitAsDefaultInstance() {
  ::rbk::protocol::_Message_Map_default_instance_._instance.get_mutable()->header_ = const_cast< ::rbk::protocol::Message_MapHeader*>(
      ::rbk::protocol::Message_MapHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message_Map::kMapDirectoryFieldNumber;
const int Message_Map::kHeaderFieldNumber;
const int Message_Map::kNormalPosListFieldNumber;
const int Message_Map::kNormalLineListFieldNumber;
const int Message_Map::kAdvancedPointListFieldNumber;
const int Message_Map::kAdvancedLineListFieldNumber;
const int Message_Map::kAdvancedCurveListFieldNumber;
const int Message_Map::kAdvancedAreaListFieldNumber;
const int Message_Map::kPatrolRouteListFieldNumber;
const int Message_Map::kRssiPosListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message_Map::Message_Map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_5fmap_2eproto::scc_info_Message_Map.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rbk.protocol.Message_Map)
}
Message_Map::Message_Map(const Message_Map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      normal_pos_list_(from.normal_pos_list_),
      normal_line_list_(from.normal_line_list_),
      advanced_point_list_(from.advanced_point_list_),
      advanced_line_list_(from.advanced_line_list_),
      advanced_curve_list_(from.advanced_curve_list_),
      advanced_area_list_(from.advanced_area_list_),
      patrol_route_list_(from.patrol_route_list_),
      rssi_pos_list_(from.rssi_pos_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.map_directory().size() > 0) {
    map_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_directory_);
  }
  if (from.has_header()) {
    header_ = new ::rbk::protocol::Message_MapHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rbk.protocol.Message_Map)
}

void Message_Map::SharedCtor() {
  map_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
}

Message_Map::~Message_Map() {
  // @@protoc_insertion_point(destructor:rbk.protocol.Message_Map)
  SharedDtor();
}

void Message_Map::SharedDtor() {
  map_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void Message_Map::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message_Map::descriptor() {
  ::protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message_Map& Message_Map::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_message_5fmap_2eproto::scc_info_Message_Map.base);
  return *internal_default_instance();
}


void Message_Map::Clear() {
// @@protoc_insertion_point(message_clear_start:rbk.protocol.Message_Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  normal_pos_list_.Clear();
  normal_line_list_.Clear();
  advanced_point_list_.Clear();
  advanced_line_list_.Clear();
  advanced_curve_list_.Clear();
  advanced_area_list_.Clear();
  patrol_route_list_.Clear();
  rssi_pos_list_.Clear();
  map_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool Message_Map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rbk.protocol.Message_Map)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string map_directory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->map_directory().data(), static_cast<int>(this->map_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rbk.protocol.Message_Map.map_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rbk.protocol.Message_MapHeader header = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapPos normal_pos_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_normal_pos_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapLine normal_line_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_normal_line_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_AdvancedPoint advanced_point_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_advanced_point_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_AdvancedLine advanced_line_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_advanced_line_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_AdvancedCurve advanced_curve_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_advanced_curve_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_AdvancedArea advanced_area_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_advanced_area_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_PatrolRoute patrol_route_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_patrol_route_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rbk.protocol.Message_MapRSSIPos rssi_pos_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rssi_pos_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rbk.protocol.Message_Map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rbk.protocol.Message_Map)
  return false;
#undef DO_
}

void Message_Map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rbk.protocol.Message_Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_directory = 1;
  if (this->map_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_directory().data(), static_cast<int>(this->map_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_Map.map_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->map_directory(), output);
  }

  // .rbk.protocol.Message_MapHeader header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_header(), output);
  }

  // repeated .rbk.protocol.Message_MapPos normal_pos_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->normal_pos_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->normal_pos_list(static_cast<int>(i)),
      output);
  }

  // repeated .rbk.protocol.Message_MapLine normal_line_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->normal_line_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->normal_line_list(static_cast<int>(i)),
      output);
  }

  // repeated .rbk.protocol.Message_AdvancedPoint advanced_point_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advanced_point_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->advanced_point_list(static_cast<int>(i)),
      output);
  }

  // repeated .rbk.protocol.Message_AdvancedLine advanced_line_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advanced_line_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->advanced_line_list(static_cast<int>(i)),
      output);
  }

  // repeated .rbk.protocol.Message_AdvancedCurve advanced_curve_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advanced_curve_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->advanced_curve_list(static_cast<int>(i)),
      output);
  }

  // repeated .rbk.protocol.Message_AdvancedArea advanced_area_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advanced_area_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->advanced_area_list(static_cast<int>(i)),
      output);
  }

  // repeated .rbk.protocol.Message_PatrolRoute patrol_route_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->patrol_route_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->patrol_route_list(static_cast<int>(i)),
      output);
  }

  // repeated .rbk.protocol.Message_MapRSSIPos rssi_pos_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rssi_pos_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->rssi_pos_list(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rbk.protocol.Message_Map)
}

::google::protobuf::uint8* Message_Map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rbk.protocol.Message_Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_directory = 1;
  if (this->map_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_directory().data(), static_cast<int>(this->map_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rbk.protocol.Message_Map.map_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->map_directory(), target);
  }

  // .rbk.protocol.Message_MapHeader header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_header(), deterministic, target);
  }

  // repeated .rbk.protocol.Message_MapPos normal_pos_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->normal_pos_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->normal_pos_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rbk.protocol.Message_MapLine normal_line_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->normal_line_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->normal_line_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rbk.protocol.Message_AdvancedPoint advanced_point_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advanced_point_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->advanced_point_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rbk.protocol.Message_AdvancedLine advanced_line_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advanced_line_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->advanced_line_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rbk.protocol.Message_AdvancedCurve advanced_curve_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advanced_curve_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->advanced_curve_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rbk.protocol.Message_AdvancedArea advanced_area_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advanced_area_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->advanced_area_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rbk.protocol.Message_PatrolRoute patrol_route_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->patrol_route_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->patrol_route_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rbk.protocol.Message_MapRSSIPos rssi_pos_list = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rssi_pos_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->rssi_pos_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rbk.protocol.Message_Map)
  return target;
}

size_t Message_Map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rbk.protocol.Message_Map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rbk.protocol.Message_MapPos normal_pos_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->normal_pos_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->normal_pos_list(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_MapLine normal_line_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->normal_line_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->normal_line_list(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_AdvancedPoint advanced_point_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->advanced_point_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->advanced_point_list(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_AdvancedLine advanced_line_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->advanced_line_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->advanced_line_list(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_AdvancedCurve advanced_curve_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->advanced_curve_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->advanced_curve_list(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_AdvancedArea advanced_area_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->advanced_area_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->advanced_area_list(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_PatrolRoute patrol_route_list = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->patrol_route_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->patrol_route_list(static_cast<int>(i)));
    }
  }

  // repeated .rbk.protocol.Message_MapRSSIPos rssi_pos_list = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->rssi_pos_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rssi_pos_list(static_cast<int>(i)));
    }
  }

  // string map_directory = 1;
  if (this->map_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_directory());
  }

  // .rbk.protocol.Message_MapHeader header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rbk.protocol.Message_Map)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message_Map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rbk.protocol.Message_Map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rbk.protocol.Message_Map)
    MergeFrom(*source);
  }
}

void Message_Map::MergeFrom(const Message_Map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rbk.protocol.Message_Map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  normal_pos_list_.MergeFrom(from.normal_pos_list_);
  normal_line_list_.MergeFrom(from.normal_line_list_);
  advanced_point_list_.MergeFrom(from.advanced_point_list_);
  advanced_line_list_.MergeFrom(from.advanced_line_list_);
  advanced_curve_list_.MergeFrom(from.advanced_curve_list_);
  advanced_area_list_.MergeFrom(from.advanced_area_list_);
  patrol_route_list_.MergeFrom(from.patrol_route_list_);
  rssi_pos_list_.MergeFrom(from.rssi_pos_list_);
  if (from.map_directory().size() > 0) {

    map_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_directory_);
  }
  if (from.has_header()) {
    mutable_header()->::rbk::protocol::Message_MapHeader::MergeFrom(from.header());
  }
}

void Message_Map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rbk.protocol.Message_Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Map::CopyFrom(const Message_Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rbk.protocol.Message_Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Map::IsInitialized() const {
  return true;
}

void Message_Map::Swap(Message_Map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message_Map::InternalSwap(Message_Map* other) {
  using std::swap;
  CastToBase(&normal_pos_list_)->InternalSwap(CastToBase(&other->normal_pos_list_));
  CastToBase(&normal_line_list_)->InternalSwap(CastToBase(&other->normal_line_list_));
  CastToBase(&advanced_point_list_)->InternalSwap(CastToBase(&other->advanced_point_list_));
  CastToBase(&advanced_line_list_)->InternalSwap(CastToBase(&other->advanced_line_list_));
  CastToBase(&advanced_curve_list_)->InternalSwap(CastToBase(&other->advanced_curve_list_));
  CastToBase(&advanced_area_list_)->InternalSwap(CastToBase(&other->advanced_area_list_));
  CastToBase(&patrol_route_list_)->InternalSwap(CastToBase(&other->patrol_route_list_));
  CastToBase(&rssi_pos_list_)->InternalSwap(CastToBase(&other->rssi_pos_list_));
  map_directory_.Swap(&other->map_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message_Map::GetMetadata() const {
  protobuf_message_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace rbk
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_MapProperty* Arena::CreateMaybeMessage< ::rbk::protocol::Message_MapProperty >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_MapProperty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_MapPos* Arena::CreateMaybeMessage< ::rbk::protocol::Message_MapPos >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_MapPos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_MapRSSIPos* Arena::CreateMaybeMessage< ::rbk::protocol::Message_MapRSSIPos >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_MapRSSIPos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_MapLine* Arena::CreateMaybeMessage< ::rbk::protocol::Message_MapLine >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_MapLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_MapHeader* Arena::CreateMaybeMessage< ::rbk::protocol::Message_MapHeader >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_MapHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_MapAttribute* Arena::CreateMaybeMessage< ::rbk::protocol::Message_MapAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_MapAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_AdvancedPoint* Arena::CreateMaybeMessage< ::rbk::protocol::Message_AdvancedPoint >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_AdvancedPoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_AdvancedLine* Arena::CreateMaybeMessage< ::rbk::protocol::Message_AdvancedLine >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_AdvancedLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_AdvancedCurve* Arena::CreateMaybeMessage< ::rbk::protocol::Message_AdvancedCurve >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_AdvancedCurve >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_AdvancedArea* Arena::CreateMaybeMessage< ::rbk::protocol::Message_AdvancedArea >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_AdvancedArea >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_VirtualLineList* Arena::CreateMaybeMessage< ::rbk::protocol::Message_VirtualLineList >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_VirtualLineList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_LaserDevice* Arena::CreateMaybeMessage< ::rbk::protocol::Message_LaserDevice >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_LaserDevice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_Device* Arena::CreateMaybeMessage< ::rbk::protocol::Message_Device >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_Device >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_PatrolRouteStation* Arena::CreateMaybeMessage< ::rbk::protocol::Message_PatrolRouteStation >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_PatrolRouteStation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_PatrolRoute* Arena::CreateMaybeMessage< ::rbk::protocol::Message_PatrolRoute >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_PatrolRoute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rbk::protocol::Message_Map* Arena::CreateMaybeMessage< ::rbk::protocol::Message_Map >(Arena* arena) {
  return Arena::CreateInternal< ::rbk::protocol::Message_Map >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
